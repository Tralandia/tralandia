php:
	date.timezone: Europe/Bratislava
	zlib.output_compression: yes
	max_execution_time: 60

nette:
	container:
		debugger: false  # aktivuje panel v Debugger baru

	session:
		autoStart: smart
		expiration: '+1 year'

parameters:
	centralLanguage: 38

	security:
		salt: '8723lks762ngknl90835bkd'
		sender: 'noreply@tralandia.sk'

	envOptions:
		sendEmail: TRUE

	editor: 'txmt://open/?url=file://%file&line=%line'

	router:
		mode: development

	settingsDir: %appDir%/configs
	rentalImageDir: /storage/rental_images

	database:
		user: root
		password: root
		host: 127.0.0.1
		dbname: tralandia
		charset: utf8
		driver: pdo_mysql
		debugger: false

doctrine:
	connections:
		default: %database%

	entityManagers:
		default:
			connection: default

	console:
		entityManager: default

presenter:
	configsDir: %appDir%/configs/presenters

services:
	# STORAGE
	rentalImageStorage: Extras\RentalImageStorage(%wwwDir%%rentalImageDir%)

	cacheStorage: 
		class: Nette\Caching\Storages\MemcachedStorage('127.0.0.1', '11211', 'tralandia_')

	# CACHE
	aclCache: Nette\Caching\Cache(@cacheStorage, 'Acl')
	routerCache: Nette\Caching\Cache(@cacheStorage, 'Router')
	translatorCache: Nette\Caching\Cache(@cacheStorage, 'Translator')
	rentalSearchCache: Extras\Cache\Cache(@cacheStorage, 'RentalSearchCache')
	rentalOrderCache: Extras\Cache\Cache(@cacheStorage, 'RentalOrderCache')

	# SEARCH
	rentalSearchService:
		factory: @rentalSearchServiceFactory::create(@environment::getPrimaryLocation())

	# ROUTER
	routerFactory: 
		class: Routers\RouterFactory([defaultLanguage: %centralLanguage%, defaultPrimaryLocation: 46])
		setup:
			- $locationRepositoryAccessor(@locationRepositoryAccessor)
			- $languageRepositoryAccessor(@languageRepositoryAccessor)

	router: @routerFactory::create

	console: @doctrine.console
	model: @doctrine.entityManagers.default

	# nette.presenterFactory:
		# class: Extras\DynamicPresenterFactory
		# factory: Extras\DynamicPresenterFactory::factory

	user:
		class: Security\User

	authenticator: Security\Authenticator

	authorizator: 
		class: Security\Acl
		setup:
			# - $cache(@aclCache)
			- $roleRepository(@userRoleRepositoryAccessor)
			- $config(%acl%)
			- setup()

	environment: 
		class: Extras\Environment(@application::getRequests(), @languageRepositoryAccessor, @locationRepositoryAccessor)
	translator: Extras\Translator(@environment, @phraseRepositoryAccessor, @translatorCache)

	settings:
		factory: Extras\PresenterSettings::factory

	# @TODO ------------------------ 
	# emailCompiler: 
	# 	class: Extras\Email\Compiler
	# 	setup:
	# 		- $phraseServiceFactory(@phraseServiceFactory)
	# 		- setVariableFactory(rental, @rentalEmailVariableFactory)
	# 		- setVariableFactory(language, @languageEmailVariableFactory)
	# 		- setVariableFactory(location, @locationEmailVariableFactory)
	# 		- setVariableFactory(visitor, @visitorEmailVariableFactory)
	# 		- setVariableFactory(environment, @environmentEmailVariableFactory)

	# rentalEmailVariableFactory: Extras\Email\Variables\RentalVariablesFactory(@rentalServiceFactory)
	# languageEmailVariableFactory: Extras\Email\Variables\LanguageVariablesFactory(@languageServiceFactory)
	# locationEmailVariableFactory: Extras\Email\Variables\LocationVariablesFactory(@locationServiceFactory)
	# visitorEmailVariableFactory: Extras\Email\Variables\UserVariablesFactory('VisitorVariables', @userServiceFactory)
	# environmentEmailVariableFactory: Extras\Email\Variables\EnvironmentVariablesFactory
	# --------------------------------

	templateHelpers:
		class: Extras\Helpers
		setup:
			- $rentalImageDir(%rentalImageDir%)

	autopilot:
		class: Service\Autopilot\Autopilot
		setup:
			- $taskRepository(@taskRepositoryAccessor)
			- $taskTypeRepository(@taskTypeRepositoryAccessor)
			- $taskServiceFactory(@taskDecoratorFactory)

	taskManager:
		class: Service\TaskManager\TaskManager
		setup:
			- addScanner(@missingTranslationsScanner)

	missingTranslationsScanner:
		class: Service\TaskManager\MissingTranslationsScanner(@autopilot, @phraseTranslationRepositoryAccessor, @languageRepositoryAccessor)

	generatePathSegmentsRobot: Service\Robot\GeneratePathSegmentsRobot
	createMissingTranslationsRobot: Service\Robot\CreateMissingTranslationsRobot

	phoneBook: Extras\Books\Phone(@contactPhoneRepositoryAccessor, @locationRepositoryAccessor)
	emailBook: Extras\Books\Email(@contactEmailRepositoryAccessor)
	urlBook: Extras\Books\Url(@contactUrlRepositoryAccessor)

	itemTextFactory: Extras\FormMask\Items\Foctories\TextFactory
	itemPhraseFactory: Extras\FormMask\Items\Foctories\PhraseFactory(@phraseDecoratorFactory, @environment::getLanguage())
	itemAdvancedPhraseFactory: Extras\FormMask\Items\Foctories\AdvancedPhraseFactory(@environment)
	itemReadOnlyPhraseFactory: Extras\FormMask\Items\Foctories\ReadOnlyPhraseFactory(@environment)
	itemYesNoFactory: Extras\FormMask\Items\Foctories\YesNoFactory
	itemJsonFactory: Extras\FormMask\Items\Foctories\JsonFactory
	itemNeonFactory: Extras\FormMask\Items\Foctories\NeonFactory
	itemTextareaFactory: Extras\FormMask\Items\Foctories\TextareaFactory
	itemPriceFactory: Extras\FormMask\Items\Foctories\PriceFactory
	itemSelectFactory: Extras\FormMask\Items\Foctories\SelectFactory(@translator)
	itemCheckboxFactory: Extras\FormMask\Items\Foctories\CheckboxFactory
	itemTinymceFactory: Extras\FormMask\Items\Foctories\TinymceFactory

	googleGeocodeService: GoogleGeocodeServiceV3(@googleServiceCommunicator)
	googleServiceCommunicator: CurlCommunicator

	polygonService: Service\PolygonService

factories: 
	# ==============================
	# ==================== FORMS
	# ==============================
	rentalEditFormFactory: 
		class: OwnerModule\Forms\RentalEditForm(%rental%)
		implement: OwnerModule\Forms\IRentalEditFormFactory

	rentalReservationFormFactory: 
		class: FrontModule\Forms\Rental\ReservationForm(%rental%)
		implement: FrontModule\Forms\Rental\IReservationFormFactory

	# ==============================
	# ==================== COMPONENTS
	# ==============================
	footerControlFactory:
		class: FrontModule\Components\Footer\FooterControl(%location%)
		implement: FrontModule\Components\Footer\IFooterControlFactory

	countriesFooterControlFactory:
		class: FrontModule\Components\Footer\CountriesFooterControl
		implement: FrontModule\Components\Footer\ICountriesFooterControlFactory

	searchBarControlFactory:
		class: FrontModule\Components\SearchBar\SearchBarControl(%location%)
		implement: FrontModule\Components\SearchBar\ISearchBarControlFactory

	# ==============================
	# ==================== ROUTERS
	# ==============================
	frontRouteFactory:
		class: Routers\FrontRoute(@routerCache, %router.mode%)
		setup:
			- $locationRepositoryAccessor(@locationRepositoryAccessor)
			- $languageRepositoryAccessor(@languageRepositoryAccessor)
			- $rentalRepositoryAccessor(@rentalRepositoryAccessor)
			- $rentalTypeRepositoryAccessor(@rentalTypeRepositoryAccessor)
			- $attractionRepositoryAccessor(@attractionRepositoryAccessor)
			- $attractionTypeRepositoryAccessor(@attractionTypeRepositoryAccessor)
			- $routingPathSegmentRepositoryAccessor(@routingPathSegmentRepositoryAccessor)
			- $domainRepositoryAccessor(@domainRepositoryAccessor)
			- $pageRepositoryAccessor(@pageRepositoryAccessor)
			- $rentalTagRepositoryAccessor(@rentalTagRepositoryAccessor)
			- $rentalAmenityRepositoryAccessor(@rentalAmenityRepositoryAccessor)
			- $phraseDecoratorFactory(@phraseDecoratorFactory)
		implement: Routers\IFrontRouteFactory

	ownerRouteListFactory:
		class: Routers\OwnerRouteList(@languageRepositoryAccessor, @locationRepositoryAccessor)
		implement: Routers\IOwnerRouteListFactory


	# ==============================
	# ==================== CACHE
	# ==============================
	# searchCacheFactory:
	# 	class: Extras\Cache\Cache(@cacheStorage, %namespace%)
	# 	implement: Extras\Cache\ISearchCacheFactory

	rentalSearchCachingFactory: 
		class: Extras\Cache\RentalSearchCaching(%location%, @rentalSearchCache)
		implement: Extras\Cache\IRentalSearchCachingFactory

	rentalOrderCachingFactory: 
		class: Extras\Cache\RentalOrderCaching(%location%, @rentalOrderCache)
		implement: Extras\Cache\IRentalOrderCachingFactory

	# ==============================
	# ==================== SERVICES
	# ==============================
	addressNormalizerFactory: 
		class: Service\Contact\AddressNormalizer(%address%)
		implement: Service\Contact\IAddressNormalizerFactory

	rentalSearchServiceFactory: 
		class: Service\Rental\RentalSearchService(%location%, @rentalSearchCache, @rentalOrderCache)
		implement: Service\Rental\IRentalSearchServiceFactory

	seoServiceFactory:
		class: Service\Seo\SeoService
		arguments: [%url%, %request%]
		implement: Service\Seo\ISeoServiceFactory

	updateRentalSearchCacheRobotFactory:
		class: Service\Robot\UpdateRentalSearchCacheRobot(%location%)
		implement: Service\Robot\IUpdateRentalSearchCacheRobotFactory

	itemMapFactory: Extras\FormMask\Items\Foctories\MapFactory
	itemEmailFactory: Extras\FormMask\Items\Foctories\EmailFactory
	itemAddressFactory: Extras\FormMask\Items\Foctories\AddressFactory(@translator, @contactAddressRepositoryAccessor)
	itemPhoneFactory: Extras\FormMask\Items\Foctories\PhoneFactory
	itemUrlFactory: Extras\FormMask\Items\Foctories\UrlFactory

includes:
	- webLoader.neon
	- acl/acl.neon
	- modelServices.neon
	- oldRepositoryServices.neon

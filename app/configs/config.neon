php:
	date.timezone: Europe/Bratislava
	zlib.output_compression: yes
	max_execution_time: 60

nette:
	container:
		debugger: false  # aktivuje panel v Debugger baru

	session:
		autoStart: smart
		expiration: '+1 year'

	latte:
		macros:
			- Extras\ImageMacro
			- Extras\Macros


parameters:

	security:
		salt: '8723lks762ngknl90835bkd'
		sender: 'noreply@tralandia.sk'

	envOptions:
		sendEmail: TRUE

	router:
		mode: development

	settingsDir: %appDir%/configs
	rentalImageDir: /storage/rental_images
	rentalPricelistDir: /storage/rental_pricelists
	ticketMessageAttachmentDir: /storage/ticket_message_attachment

	database:
		user: root
		password: root
		host: 127.0.0.1
		dbname: tralandia
		charset: utf8
		driver: pdo_mysql
		debugger: false

	useTemplateCache: FALSE

doctrine:
	connections:
		default: %database%

	entityManagers:
		default:
			connection: default

	console:
		entityManager: default

presenter:
	configsDir: %appDir%/configs/presenters

services:

	# STORAGE
	rentalPricelistStorage: Extras\FileStorage(%wwwDir%%rentalPricelistDir%)
	ticketMessageAttachmentStorage: Extras\FileStorage(%wwwDir%%ticketMessageAttachmentDir%)

	cacheStorage: 
		class: Nette\Caching\Storages\MemcachedStorage('127.0.0.1', '11211', 'tralandia_')

	# CACHE
	aclCache: Nette\Caching\Cache(@cacheStorage, 'Acl')
	routerCache: Nette\Caching\Cache(@cacheStorage, 'Router')
	translatorCache: Nette\Caching\Cache(@cacheStorage, 'Translator')
	rentalSearchCache: Extras\Cache\Cache(@cacheStorage, 'RentalSearchCache')
	rentalOrderCache: Extras\Cache\Cache(@cacheStorage, 'RentalOrderCache')

	# SEARCH
	rentalSearchService:
		factory: @rentalSearchServiceFactory::create(@environment::getPrimaryLocation())

	favoriteList: FavoriteList(@rentalRepositoryAccessor)
	lastSearch: LastSearch(@session::getSection('lastSearch'))

	# ROUTER

	routerFactory:
		class: Routers\RouterFactory([defaultLanguage: %centralLanguage%, defaultPrimaryLocation: 46])
		setup:
			- $locationRepositoryAccessor(@locationRepositoryAccessor)
			- $languageRepositoryAccessor(@languageRepositoryAccessor)

	router: @routerFactory::create

	console: @doctrine.console
	model: @doctrine.entityManagers.default

	nette.presenterFactory:
		factory: Extras\Presenter\Factory::factory(%appDir%, %tempDir%/presenters, @container)
		class: Extras\Presenter\Factory

	authenticator: Security\Authenticator(@userRepositoryAccessor::get())

	authorizator: 
		class: Security\SimpleAcl(..., @userRoleRepositoryAccessor::get())

	environment: Environment\Environment(@application::getRequests())

	locale: @environment::getLocale()

	collator: @locale::getCollator()

	translator: @environment::getTranslator()

	# --------------------------------

	templateHelpers:
		class: Extras\Helpers
		setup:
			- $rentalImageDir(%rentalImageDir%)

	generatePathSegmentsRobot: Service\Robot\GeneratePathSegmentsRobot
	createMissingTranslationsRobot: Service\Robot\CreateMissingTranslationsRobot

	phoneBook: Extras\Books\Phone(@contactPhoneRepositoryAccessor, @locationRepositoryAccessor)
	emailBook: Extras\Books\Email(@contactEmailRepositoryAccessor)
	urlBook: Extras\Books\Url(@contactUrlRepositoryAccessor)

	itemTextFactory: Extras\FormMask\Items\Foctories\TextFactory
	itemPhraseFactory: Extras\FormMask\Items\Foctories\PhraseFactory(@phraseDecoratorFactory, @environment::getLanguage())
	itemAdvancedPhraseFactory: Extras\FormMask\Items\Foctories\AdvancedPhraseFactory(@environment)
	itemReadOnlyPhraseFactory: Extras\FormMask\Items\Foctories\ReadOnlyPhraseFactory(@environment)
	itemYesNoFactory: Extras\FormMask\Items\Foctories\YesNoFactory
	itemJsonFactory: Extras\FormMask\Items\Foctories\JsonFactory
	itemNeonFactory: Extras\FormMask\Items\Foctories\NeonFactory
	itemTextareaFactory: Extras\FormMask\Items\Foctories\TextareaFactory
	itemPriceFactory: Extras\FormMask\Items\Foctories\PriceFactory
	itemSelectFactory: Extras\FormMask\Items\Foctories\SelectFactory(@translator)
	itemCheckboxFactory: Extras\FormMask\Items\Foctories\CheckboxFactory
	itemTinymceFactory: Extras\FormMask\Items\Foctories\TinymceFactory

	# ==============================
	# ==================== SERVICES
	# ==============================
	googleGeocodeService: GoogleGeocodeServiceV3(@googleServiceCommunicator)
	googleServiceCommunicator: CurlCommunicator

	polygonService: Service\PolygonService
	rentalRegistrationsStats: Service\Statistics\RentalRegistrations(@rentalRepositoryAccessor::get(), @locationRepositoryAccessor::get())
	rentalCreator: Service\Rental\RentalCreator(@rentalRepositoryAccessor::get())
	addressCreator: Service\Contact\AddressCreator

	addressNormalizer: Service\Contact\AddressNormalizer


	rentalImageStorage: Image\RentalImageStorage(%wwwDir%%rentalImageDir%)
	rentalImagePipe: Image\RentalImagePipe(%wwwDir%, %rentalImageDir%)
	rentalImageManager: Image\RentalImageManager(@rentalImageRepositoryAccessor)

	searchOptionGenerator: SearchGenerator\OptionGenerator
	searchGeneratorTopLocations: SearchGenerator\TopLocations(@environment::getPrimaryLocation(), @rentalSearchCache)

	# ==============================
	# ==================== FORMS HANDLERS
	# ==============================
	registrationHandler:
		class: FormHandler\RegistrationHandler


	# ==============================
	# ==================== Components
	# ==============================
	calendarControl: BaseModule\Components\CalendarControl

	searchBarControl: FrontModule\Components\SearchBar\SearchBarControl()

factories: 
	# ==============================
	# ==================== FORMS
	# ==============================
	rentalEditFormFactory: 
		class: OwnerModule\Forms\RentalEditForm(%rental%)
		implement: OwnerModule\Forms\IRentalEditFormFactory

	userEditFormFactory:
		class: OwnerModule\Forms\UserEditForm(%user%, @userRepositoryAccessor)
		implement: OwnerModule\Forms\IUserEditFormFactory

	signInFormFactory:
		class: BaseModule\Forms\Sign\InForm(@userRepositoryAccessor)
		implement: BaseModule\Forms\Sign\IInFormFactory

	forgotPasswordFormFactory:
		class: BaseModule\Forms\ForgotPasswordForm(@userRepositoryAccessor)
		implement: BaseModule\Forms\IForgotPasswordFormFactory

	rentalReservationFormFactory:
		class: FrontModule\Forms\Rental\ReservationForm(%rental%, @locationRepositoryAccessor::get())
		implement: FrontModule\Forms\Rental\IReservationFormFactory

	contactFormFactory:
		class: FrontModule\Forms\ContactForm(%user%, %language%, @ticketRepositoryAccessor::get())
		implement: FrontModule\Forms\IContactFormFactory

	ticketFormFactory:
		class: FrontModule\Forms\TicketForm(%user%, %ticket%, @ticketMessageRepositoryAccessor::get(),
		@faqQuestionRepositoryAccessor::get())
		implement: FrontModule\Forms\ITicketFormFactory

	registrationFormFactory:
		class: FrontModule\Forms\RegistrationForm(%country%)
		implement: FrontModule\Forms\IRegistrationFormFactory

	searchFormFactory:
		class: FrontModule\Forms\SearchForm
		implement: FrontModule\Forms\ISearchFormFactory

	# ==============================
	# ==================== COMPONENTS
	# ==============================
	headerControlFactory:
		class: BaseModule\Components\HeaderControl(%pageSeo%)
		implement: BaseModule\Components\IHeaderControlFactory

	footerControlFactory:
		class: FrontModule\Components\Footer\FooterControl(%location%)
		implement: FrontModule\Components\Footer\IFooterControlFactory

	countriesFooterControlFactory:
		class: FrontModule\Components\Footer\CountriesFooterControl
		implement: FrontModule\Components\Footer\ICountriesFooterControlFactory

	# ==============================
	# ==================== ROUTERS
	# ==============================
	ownerRouteListFactory:
		class: Routers\OwnerRouteList(@languageRepositoryAccessor, @locationRepositoryAccessor)
		implement: Routers\IOwnerRouteListFactory

	simpleRouteFactory:
		class: Routers\SimpleRoute
		arguments: [%mask%, %metadata%, @languageRepositoryAccessor::get(), @locationRepositoryAccessor::get()]
		implement: Routers\ISimpleRouteFactory

	frontRouteFactory:
		class: Routers\FrontRoute
		arguments: [ @languageRepositoryAccessor::get(), @locationRepositoryAccessor::get() ]
		setup:
			- $locationRepositoryAccessor(@locationRepositoryAccessor)
			- $languageRepositoryAccessor(@languageRepositoryAccessor)
			- $rentalRepositoryAccessor(@rentalRepositoryAccessor)
			- $rentalTypeRepositoryAccessor(@rentalTypeRepositoryAccessor)
			- $routingPathSegmentRepositoryAccessor(@routingPathSegmentRepositoryAccessor)
			- $domainRepositoryAccessor(@domainRepositoryAccessor)
			- $pageRepositoryAccessor(@pageRepositoryAccessor)
			- $rentalAmenityRepositoryAccessor(@rentalAmenityRepositoryAccessor)
			- $favoriteListRepositoryAccessor(@favoriteListRepositoryAccessor)
			- $pageRepositoryAccessor(@pageRepositoryAccessor)
			- $phraseDecoratorFactory(@phraseDecoratorFactory)
		implement: Routers\IFrontRouteFactory


	# ==============================
	# ==================== CACHE
	# ==============================
	# searchCacheFactory:
	# 	class: Extras\Cache\Cache(@cacheStorage, %namespace%)
	# 	implement: Extras\Cache\ISearchCacheFactory

	rentalSearchCachingFactory: 
		class: Extras\Cache\RentalSearchCaching(%location%, @rentalSearchCache)
		implement: Extras\Cache\IRentalSearchCachingFactory

	rentalOrderCachingFactory: 
		class: Extras\Cache\RentalOrderCaching(%location%, @rentalOrderCache)
		implement: Extras\Cache\IRentalOrderCachingFactory

	# ==============================
	# ==================== SERVICES
	# ==============================
	rentalSearchServiceFactory: 
		class: Service\Rental\RentalSearchService(%location%, @rentalSearchCache)
		implement: Service\Rental\IRentalSearchServiceFactory

	seoServiceFactory:
		class: Service\Seo\SeoService
		arguments: [%url%, %request%, @pageRepositoryAccessor]
		implement: Service\Seo\ISeoServiceFactory

	updateRentalSearchCacheRobotFactory:
		class: Service\Robot\UpdateRentalSearchCacheRobot(%location%)
		implement: Service\Robot\IUpdateRentalSearchCacheRobotFactory

	translatorFactory:
		class: Extras\Translator(%language%, @phraseRepositoryAccessor, @translatorCache)
		implement: Extras\ITranslatorFactory

	emailCompilerFactory:
		class: Mail\Compiler(%location%, %language%)
		implement: Mail\ICompilerFactory

	itemMapFactory: Extras\FormMask\Items\Foctories\MapFactory
	itemEmailFactory: Extras\FormMask\Items\Foctories\EmailFactory
	itemAddressFactory: Extras\FormMask\Items\Foctories\AddressFactory(@translator, @contactAddressRepositoryAccessor)
	itemPhoneFactory: Extras\FormMask\Items\Foctories\PhoneFactory
	itemUrlFactory: Extras\FormMask\Items\Foctories\UrlFactory

	#dataGrid:
		#class: TwiGrid\DataGrid
		#factory: TwiGrid\DataGrid
		#setup:
		#	- setTranslator(@translator)

includes:
	- webLoader.neon
	- acl/acl.neon
	- modelServices.neon
	- oldRepositoryServices.neon
	- listeners.neon

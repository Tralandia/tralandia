common:
	service: Service\Location\Location
	title: Location / Location
	h1: Location / Location
	grid:
		columns:
			id:
				label: ID
				mapper: e.id
			name:
				label: Name
				mapper: e.id
				callback: {class: %this%, method: translateColumn, params: name}
			nameOfficial:
				label: NameOfficial
				mapper: e.id
				callback: {class: %this%, method: translateColumn, params: name}
			nameShort:
				label: NameShort
				mapper: e.id
				callback: {class: %this%, method: translateColumn, params: name}
			# slug:
			# 	label: Slug
			# 	mapper: e.slug
			# parentId:
			# 	label: ParentId
			# 	mapper: e.parentId
			# 	cellStyle: text-align:right;
			# type:
			# 	label: Type
			# 	mapper: e.type
			# polygon:
			# 	label: Polygon
			# 	mapper: e.polygon
			# latitude:
			# 	label: Latitude
			# 	mapper: e.latitude
			# longitude:
			# 	label: Longitude
			# 	mapper: e.longitude
			# defaultZoom:
			# 	label: DefaultZoom
			# 	mapper: e.defaultZoom
			# 	cellStyle: text-align:right;
			# clickMapData:
			# 	label: ClickMapData
			# 	mapper: e.clickMapData
			# bankAccounts:
			# 	label: BankAccounts
			# 	mapper: e.bankAccounts
			# companies:
			# 	label: Companies
			# 	mapper: e.companies
			# offices:
			# 	label: Offices
			# 	mapper: e.offices
			# domain:
			# 	label: Domain
			# 	mapper: e.domain
			# marketings:
			# 	label: Marketings
			# 	mapper: e.marketings
			# rentals:
			# 	label: Rentals
			# 	mapper: e.rentals
			# users:
			# 	label: Users
			# 	mapper: e.users
			# incomingLocations:
			# 	label: IncomingLocations
			# 	mapper: e.incomingLocations
			# outgoingLocations:
			# 	label: OutgoingLocations
			# 	mapper: e.outgoingLocations
			# status:
			# 	label: Status
			# 	mapper: e.status
			# iso:
			# 	label: Iso
			# 	mapper: e.iso
			# iso3:
			# 	label: Iso3
			# 	mapper: e.iso3
			# defaultCurrency:
			# 	label: DefaultCurrency
			# 	mapper: e.defaultCurrency
			# currencies:
			# 	label: Currencies
			# 	mapper: e.currencies
			# defaultLanguage:
			# 	label: DefaultLanguage
			# 	mapper: e.defaultLanguage
			# languages:
			# 	label: Languages
			# 	mapper: e.languages
			# population:
			# 	label: Population
			# 	mapper: e.population
			# 	cellStyle: text-align:right;
			# phonePrefix:
			# 	label: PhonePrefix
			# 	mapper: e.phonePrefix
			# facebookGroup:
			# 	label: FacebookGroup
			# 	mapper: e.facebookGroup
			# capitalCity:
			# 	label: CapitalCity
			# 	mapper: e.capitalCity
			# phoneNumberEmergency:
			# 	label: PhoneNumberEmergency
			# 	mapper: e.phoneNumberEmergency
			# phoneNumberPolice:
			# 	label: PhoneNumberPolice
			# 	mapper: e.phoneNumberPolice
			# phoneNumberMedical:
			# 	label: PhoneNumberMedical
			# 	mapper: e.phoneNumberMedical
			# phoneNumberFire:
			# 	label: PhoneNumberFire
			# 	mapper: e.phoneNumberFire
			# wikipediaLink:
			# 	label: WikipediaLink
			# 	mapper: e.wikipediaLink
			# contacts:
			# 	label: Contacts
			# 	mapper: e.contacts
			# drivingSide:
			# 	label: DrivingSide
			# 	mapper: e.drivingSide
			# pricesPizza:
			# 	label: PricesPizza
			# 	mapper: e.pricesPizza
			# 	cellStyle: text-align:right;
			# pricesDinner:
			# 	label: PricesDinner
			# 	mapper: e.pricesDinner
			# 	cellStyle: text-align:right;
			# airports:
			# 	label: Airports
			# 	mapper: e.airports
			# details:
			# 	label: Details
			# 	mapper: e.details
			# oldId:
			# 	label: OldId
			# 	mapper: e.oldId
			# 	cellStyle: text-align:right;
			created:
				label: Created
				mapper: e.created
			updated:
				label: Updated
				mapper: e.updated
			
	form:
		fields:
			name:
				# anotations: "var:Collection,ORMOneToOne:targetEntity:EntityDictionaryPhrase,cascade:"
				class: span6
				label: Name
				control: phrase
				inlineEditing: Phrase:edit
			slug:
				# anotations: "var:slug,ORMColumn:type:slug"
				class: span6
				label: Slug
				control: text
			nameOfficial:
				# anotations: "var:Collection,ORMOneToOne:targetEntity:EntityDictionaryPhrase,cascade:"
				label: NameOfficial
				control: phrase
			nameShort:
				# anotations: "var:Collection,ORMOneToOne:targetEntity:EntityDictionaryPhrase,cascade:"
				label: NameShort
				control: phrase
			type:
				# anotations: "var:Collection,ORMManyToOne:targetEntity:Type"
				label: Type
				control: 
					type: select
					callback:
						method: getPairs
						arguments: [id, [name, id]]
			# parentId:
			# 	# anotations: "var:integer,ORMColumn:type:integer,nullable:true"
			# 	label: ParentId
			# 	control: text
			latitude:
				# anotations: "var:latlong,ORMColumn:type:latlong,nullable:true"
				label: Latitude
				control: text
				startNewRow: true
			longitude:
				# anotations: "var:latlong,ORMColumn:type:latlong,nullable:true"
				label: Longitude
				control: text
			polygon:
				# anotations: "var:json,ORMColumn:type:json,nullable:true"
				label: Polygon
				control: neon
			clickMapData:
				# anotations: "var:json,ORMColumn:type:json,nullable:true"
				label: ClickMapData
				control: neon
			defaultZoom:
				# anotations: "var:integer,ORMColumn:type:integer,nullable:true"
				label: DefaultZoom
				control: 
					type: select
					options: [1: asdf,2,3,4,5,6,7,8]
			incomingLocations:
				# anotations: "var:Collection,ORMOneToMany:targetEntity:Traveling,mappedBy:destinationLocation"
				label: IncomingLocations
				control: 
					type: multiSelect
					callback: 
						class: \Service\Location\LocationList
						method: getPairs
						arguments: [id, [name, id]]
				startNewRow: true
			outgoingLocations:
				# anotations: "var:Collection,ORMOneToMany:targetEntity:Traveling,mappedBy:sourceLocation"
				label: OutgoingLocations
				control: 
					type: multiSelect
					callback: 
						class: \Service\Location\LocationList
						method: getPairs
						arguments: [id, [name, id]]
			status:
				# anotations: "var:string,ORMColumn:type:string,nullable:true"
				label: Status
				control: 
					type: select
					prompt: '-- Vyber ! --'
					options: STATUS_.+
			iso:
				# anotations: "var:string,ORMColumn:type:string,nullable:true"
				label: Iso
				control: text
				startNewRow: true
			iso3:
				# anotations: "var:string,ORMColumn:type:string,nullable:true"
				label: Iso3
				control: text
			currencies:
				# anotations: "var:Collection,ORMManyToMany:targetEntity:EntityCurrency,mappedBy:locations,cascade:"
				label: Currencies
				control: bricksList
				inlineEditing: Currency:edit
				inlineDeleting: Currency:delete
				inlineCreating: Currency:add
			defaultCurrency:
				# anotations: "var:Collection,ORMManyToOne:targetEntity:EntityCurrency,cascade:"
				label: DefaultCurrency
				control:
					type: select
					callback: 
						class: \Service\CurrencyList
						method: getPairs
						arguments: [id, [name, id]]
			languages:
				# anotations: "var:Collection,ORMManyToMany:targetEntity:EntityDictionaryLanguage,mappedBy:locations,cascade:"
				label: Languages
				control: bricksList
				inlineEditing: DictionaryLanguage:edit
				inlineDeleting: DictionaryLanguage:delete
				inlineCreating: DictionaryLanguage:add
			defaultLanguage:
				# anotations: "var:Collection,ORMManyToOne:targetEntity:EntityDictionaryLanguage,cascade:"
				label: DefaultLanguage
				control: 
					type: select
			population:
				# anotations: "var:integer,ORMColumn:type:integer,nullable:true"
				label: Population
				control: text
				startNewRow: true
			phonePrefix:
				# anotations: "var:string,ORMColumn:type:string,nullable:true"
				label: PhonePrefix
				control: text
			facebookGroup:
				# anotations: "var:Collection,ORMManyToOne:targetEntity:EntityContactContact,cascade:"
				label: FacebookGroup
				control: text
			capitalCity:
				# anotations: "var:string,ORMColumn:type:string,nullable:true"
				label: CapitalCity
				control: text
			phoneNumberEmergency:
				# anotations: "var:Collection,ORMManyToOne:targetEntity:EntityContactContact,cascade:"
				label: PhoneNumberEmergency
				control: text
			phoneNumberPolice:
				# anotations: "var:Collection,ORMManyToOne:targetEntity:EntityContactContact,cascade:"
				label: PhoneNumberPolice
				control: text
			phoneNumberMedical:
				# anotations: "var:Collection,ORMManyToOne:targetEntity:EntityContactContact,cascade:"
				label: PhoneNumberMedical
				control: text
			phoneNumberFire:
				# anotations: "var:Collection,ORMManyToOne:targetEntity:EntityContactContact,cascade:"
				label: PhoneNumberFire
				control: text
			wikipediaLink:
				# anotations: "var:Collection,ORMManyToOne:targetEntity:EntityContactContact,cascade:"
				label: Wikipedia Link
				control: text
				class: span6
				startNewRow: TRUE
				validation:
					- [addCondition, FILLED]
					- [addRule, URL, 'Must be a valid URL or leave empty.']
			contacts:
				# anotations: "var:Collection,ORMManyToMany:targetEntity:EntityContactContact,mappedBy:locations,cascade:"
				label: Contacts
				control: bricksList
				inlineEditing: ContactContact:edit
				inlineDeleting: ContactContact:delete
				inlineCreating: ContactContact:add
			drivingSide:
				# anotations: "var:string,ORMColumn:type:string,nullable:true"
				label: DrivingSide
				control: text
			pricesPizza:
				# anotations: "var:price,ORMColumn:type:price,nullable:true"
				label: PricesPizza
				control: text
			pricesDinner:
				# anotations: "var:price,ORMColumn:type:price,nullable:true"
				label: PricesDinner
				control: text
			airports:
				# anotations: "var:text,ORMColumn:type:text,nullable:true"
				label: Airports
				control: text
			details:
				# anotations: "var:json,ORMColumn:type:json,nullable:true"
				label: Details
				control: neon
			created:
				# anotations: "var:datetime,ORMColumn:type:datetime"
				label: Created
				control: datePicker
			updated:
				# anotations: "var:datetime,ORMColumn:type:datetime"
				label: Updated
				control: datePicker
common:
	service: Service\Location\Location
	title: Location / Location
	h1: 'Location / Location -> %name%'
	grid:
		itemsPerPage: 100
		columns:
			id:
				label: ID
				mapper: e.id
			iso:
				label: Iso
				mapper: e.iso
				callback: {class: \Nette\Utils\Strings, method: upper, params: e.iso}
			name:
				label: Name
				mapper: e.id
				callback: {class: %this%, method: getAttributeForGrid, params: [name]}
			type:
				label: Type
				mapper: e.id
				callback: {class: %this%, method: getAttributeForGrid, params: [type, name]}
			status:
				label: Status
				mapper: e.status
			languages:
				label: Languages
				mapper: e.id
				callback: {class: %this%, method: getAttributeForGrid, params: [languages, name, ', ']}
	form:
		fields:
			name:
				label: Name
				control: 
					type: phrase
				inlineEditing: Phrase:edit
			nameShort:
				label: Short Name
				inlineEditing: Phrase:edit
				control: 
					type: phrase
			slug:
				label: Slug
				control: 
					type: text
			type:
				label: Type
				control: 
					type: select
					callback:
						class: Service\Location\TypeList
						method: getPairs
						params: [id, [name, id]]
			nameOfficial:
				label: Official Name
				inlineEditing: Phrase:edit
				control: 
					type: phrase
				class: span6
			# parentId:
			# 	label: ParentId
			# 	control: text
			latitude:
				label: Latitude
				control: 
					type: text
			longitude:
				label: Longitude
				control: 
					type: text
			iso:
				label: Iso
				control: 
					type: text
				startNewRow: true
			iso3:
				label: Iso3
				control: 
					type: text
			status:
				label: Status
				control: 
					type: select
					prompt: 'None'
					options: [class: \Entity\Dictionary\Type, pattern: TRANSLATION_LEVEL_.+]
			domain:
				label: Domain
				control: 
					type: select
					prompt: ' - None - '
					callback: {class: \Service\DomainList, method: getPairs, params: [id, domain, NULL, [domain: ASC]]}
			defaultZoom:
				label: Default Zoom
				control: 
					type: select
					options: [1: asdf,2,3,4,5,6,7,8]
			# incomingLocations:
			# 	label: Incoming Locations
			# 	control: 
			# 		type: multiSelect
			# 		callback: 
			# 			class: \Service\Location\LocationList
			# 			method: getPairs
			# 			arguments: [id, [name, id]]
			# 	startNewRow: true
			# outgoingLocations:
			# 	label: Outgoing Locations
			# 	control: 
			# 		type: multiSelect
			# 		callback: 
			# 			class: \Service\Location\LocationList
			# 			method: getPairs
			# 			arguments: [id, [name, id]]
			# defaultCurrency:
			# 	class: span2
			# 	startNewRow: true
			# 	label: Default Currency
			# 	control: 
			# 		type: select
			# 		class: span2
			# currencies:
			# 	label: Currencies
			# 	class: span4
			# 	control: 
			# 		type: bricksList
			# 	inlineDeleting: Currency:delete
			# 	inlineCreating: Currency:add
			# defaultLanguage:
			# 	class: span2
			# 	label: Default Language
			# 	control: 
			# 		type: select
			# 		class: span2
			# languages:
			# 	class: span4
			# 	label: Languages
			# 	control: 
			# 		type: bricksList
			# 	inlineDeleting: DictionaryLanguage:delete
			# 	inlineCreating: DictionaryLanguage:add
			# population:
			# 	startNewRow: true
			# 	label: Population
			# 	control: 
			# 		type: text
			# 	class: span2
			# capitalCity:
			# 	label: Capital City
			# 	control: 
			# 		type: text
			# 	class: span2
			# airports:
			# 	label: Airports
			# 	control: 
			# 		type: text
			# 	class: span2
			# drivingSide:
			# 	label: Driving Side
			# 	control: 
			# 		type: select
			# 		options: [left: Left,right: Right]
			# 		class: span2
			# 	class: span2
			# pricesPizza:
			# 	label: "Pizza (average price)"
			# 	control: 
			# 		type: price
			# 		callback:
			# 			class: \Service\CurrencyList
			# 			method: getPairs
			# 			params: [id, iso]
			# 	class: span2
			# pricesDinner:
			# 	label: "Dinner (average price)"
			# 	control: 
			# 		type: text
			# 	class: span2
			# 	startNewRow: TRUE
			# phonePrefix:
			# 	label: Phone Prefix
			# 	control: 
			# 		type: text
			# 	class: span2
			# 	startNewRow: TRUE
			phoneNumberEmergency:
				label: Phone - Emergency
				control: 
					type: text
				class: span2
			phoneNumberPolice:
				label: Phone - Police
				control: 
					type: text
				class: span2
			phoneNumberMedical:
				label: Phone - Medical
				control: 
					type: text
				class: span2
			phoneNumberFire:
				label: Phone - Fire
				control: 
					type: text
				class: span2
			wikipediaLink:
				label: Wikipedia Link
				control: 
					type: text
				class: span6
				startNewRow: TRUE
				validation:
					- [addCondition, FILLED]
					- [addRule, URL, 'Must be a valid URL or leave empty.']
			facebookGroup:
				label: Facebook Group
				control: 
					type: text
				class: span6
			contacts:
				label: Contacts
				class: span12
				control: 
					type: contacts
					addressLocations: {class: \Service\Location\LocationList, method: getTranslatedPairs, params: [id, name, [type: 3], [name: ASC]]}
			details:
				label: Details
				class: span12
				control: 
					type: neon
					class: neon
			polygon:
				label: Polygon
				class: span12
				control: 
					type: neon
					class: neon
			clickMapData:
				label: Click Map Data
				class: span12
				control: 
					type: neon
					class: neon

common:
	service: Service\Autopilot\Task
	title: 'Autopilot / Task'
	h1: 'Autopilot / Task -> %name%'
	grid:
		columns:
			id:
				label: ID
				mapper: e.id
			type:
				label: Type
				mapper: e.id
				callback: {class: %this%, method: getAttributeForGrid, params: [type, name]}
			entityName:
				label: Entity
				mapper: e.entityName
			entityId:
				label: Entity ID
				mapper: e.entityId
			startTime:
				label: Start Time
				mapper: e.startTime
			due:
				label: Due
				mapper: e.due
			user:
				label: User
				mapper: e.id
				callback: {class: %this%, method: getAttributeForGrid, params: [user, login]}
			userCountry:
				label: User Country
				mapper: e.id
				callback: {class: %this%, method: getAttributeForGrid, params: [userCountry, name]}
			userLanguage:
				label: UserLanguage
				mapper: e.id
				callback: {class: %this%, method: getAttributeForGrid, params: [userLanguage, name]}
	form:
		fields:
			type:
				label: Type
				control:
					type: select
					callback: {class: \Service\Autopilot\TypeList, method: getPairs, params: [id, name, NULL, [name: ASC]]}
					prompt: " - Select -"
				inlineEditing: AutopilotType:edit
				inlineCreating: AutopilotType:add
			name:
				label: Name
				control: 
					type: text
				class: span6
			user:
				startNewRow: true
				label: User
				class: span2
				control: 
					type: select
					callback: {class: \Service\User\UserList, method: getPairs, params: [id, login, [role: [6, 7, 8, 9, 10, 11]], [login: ASC]]}
					prompt: None
					class: span2
			userCountry:
				label: User Country
				class: span2
				control: 
					type: select
					callback: {class: \Service\Location\LocationList, method: getTranslatedPairs, params: [id, name, [type: 3], [name: ASC]]}
					class: span2
					prompt: " - Select -"
			userLanguage:
				label: User Language
				class: span2
				control: 
					type: select
					class: span2
					prompt: None
					callback: {class: \Service\Dictionary\LanguageList, method: getTranslatedPairs, params: [id, name, [supported: 1], [name: ASC]]}
			userLanguageLevel:
				label: User Language Level
				class: span2
				control: 
					class: span2
					type: select
					options: [class: \Entity\Dictionary\Type, pattern: TRANSLATION_LEVEL_.+]
			userRole:
				label: User Role
				class: span2
				control: 
					type: select
					class: span2
					callback: {class: \Service\User\RoleList, method: getPairs, params: [id, name, NULL, [name: ASC]]}
			usersExcluded:
				label: Users Excluded
				class: span2
				control:
					type: bricksList
					callback: {class: \Service\User\UserList, method: getPairs, params: [id, login, NULL, [login: ASC]]}
				inlineEditing: UserUser:edit
				inlineCreating: UserUser:add
				startNewRow: false
			startTime:
				startNewRow: true
				label: StartTime
				class: span2
				control: 
					type: dateTimePicker
					class: span2
			due:
				label: Due
				class: span2
				control: 
					type: dateTimePicker
					class: span2
			durationPaid:
				label: Duration Paid
				class: span2
				description: "In minutes."
				control: 
					type: text
					class: span2
			entityName:
				label: Entity Name
				control: 
					type: text
				class: span2
			entityId:
				label: Entity ID
				control: 
					type: text
				class: span2
			mission:
				startNewRow: true
				label: Mission
				class: span12
				control:
					type: tinymce
					class: span12
			links:
				startNewRow: true
				label: Links
				class: span12
				control:
					type: neon
					class: neon
			validation:
				label: Validation
				class: span12
				control:
					type: neon
					class: neon
			actions:
				label: Actions
				class: span12
				control:
					type: neon
					class: neon
			recurrenceData:
				label: RecurrenceData
				class: span12
				control:
					type: neon
					class: neon
			details:
				label: Details
				class: span12
				control:
					type: neon
					class: neon
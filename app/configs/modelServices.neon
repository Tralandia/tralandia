services:

	#attraction
	#----------
	attractionRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Attraction\Attraction')

	attractionTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Attraction\Type')


	#company
	#----------
	companyBankAccountRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Company\BankAccount')
	companyRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Company\Company')


	#contact
	#----------
	contactCacheRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\ContactCache')

	#currency
	currencyRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Currency')


	#domain
	#----------
	domainRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Domain')


	#phone+email+address+url
	#----------
	contactPhoneRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Contact\Phone')
	contactEmailRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Contact\Email')
	contactUrlRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Contact\Url')
	contactAddressRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Contact\Address')


	#email
	#----------
	emailBatchRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Email\Batch')
	emailTemplateRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Email\Template')
	emailLayoutRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Email\Layout')


	#expense
	#----------
	expenseRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Expense\Expense')
	expenseTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Expense\Type')


	#invoice
	#----------
	invoiceRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Invoice\Invoice')
	invoiceItemRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Invoice\Item')
	invoicePackageRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Invoice\Package')
	invoiceServiceRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Invoice\Service')
	invoiceServiceDurationRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Invoice\ServiceDuration')
	invoiceServiceTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Invoice\ServiceType')
	invoiceUseTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Invoice\UseType')


	#language
	#----------
	languageRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Language')


	#locatoin
	#----------
	locationRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Location\Location')
	locationTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Location\Type')


	#log
	#----------
	logChangeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Log\Change')
	logChangeTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Log\ChangeType')
	logSystemRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Log\System')


	#medium
	#----------
	mediumRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Medium\Medium')
	mediumTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Medium\Type')


	#page
	#----------
	pageRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Page')


	#phrase
	#----------
	phraseRepositoryAccessor: 
		factory: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Phrase\Phrase')
		setup:
			- setParameters(%centralLanguage%, @languageRepositoryAccessor)

	phraseTranslationRepositoryAccessor: 
		factory: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Phrase\Translation')
		setup:
			- setParameters(%centralLanguage%)

	phraseTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Phrase\Type')


	#rental
	#----------
	rentalRepositoryAccessor: 
		class: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Rental')
		setup:
			- setParameters(@invoiceServiceTypeRepositoryAccessor)

	rentalAmenityRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Amenity')
	rentalAmenityTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\AmenityType')
	rentalTagRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Tag')
	rentalInformationRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Information')
	rentalImageRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Image')
	rentalFulltextRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Fulltext')
	rentalTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Type')
	rentalInterviewQuestionRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\InterviewQuestion')
	rentalInterviewAnswerRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\InterviewAnswer')
	rentalRoomTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\RoomType')

	#FAQ
	#----------	
	faqCategoryRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Faq\Category')
	faqQuestionRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Faq\Question')


	#routing
	#----------
	routingPathSegmentRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Routing\PathSegment')
	routingPathSegmentOldRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Routing\PathSegmentOld')


	#seo
	#----------
	seoBackLinkRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Seo\BackLink')
	seoSeoUrlRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Seo\SeoUrl')
	seoTitleSuffixRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Seo\TitleSuffix')


	#task
	#----------
	taskRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Task\Task')
	taskTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Task\Type')


	#ticket
	#----------
	ticketMessageRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Ticket\Message')
	ticketRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Ticket\Ticket')


	#user
	#----------
	userRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\User')
	userCombinationRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\Combination')
	userRentalReservationRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\RentalReservation')
	userRentalReviewRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\RentalReview')
	userRentalToFriendRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\RentalToFriend')
	userRoleRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\Role')
	userSiteOwnerReviewRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\SiteOwnerReview')
	userSiteVisitorReviewRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\SiteVisitorReview')

factories:

	rentalDecoratorFactory: 
		class: Service\Rental\RentalService(..., %entity%)
		implement: Model\Rental\IRentalDecoratorFactory

	rentalImageDecoratorFactory: 
		class: Service\Rental\ImageDecorator(..., %entity%)
		setup:
			- setStorage(@rentalImageStorage)
		implement: Model\Rental\IImageDecoratorFactory

	mediumDecoratorFactory: 
		class: Service\Medium\MediumService(..., %entity%)
		implement: Model\Medium\IMediumDecoratorFactory

	taskDecoratorFactory: 
		class: Service\Task\TaskService(..., %entity%)
		implement: Model\Task\ITaskDecoratorFactory

	phraseDecoratorFactory: 
		class: Service\Phrase\PhraseService(..., %entity%)
		setup:
			- $centralLanguage(%centralLanguage%)
		implement: Model\Phrase\IPhraseDecoratorFactory

	locationDecoratorFactory: 
		class: Service\Location\LocationService(..., %entity%)
		implement: Model\Location\ILocationDecoratorFactory


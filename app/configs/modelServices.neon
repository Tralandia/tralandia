services:

	#contact
	#----------
	contactCacheRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\ContactCache')

	#currency
	#----------
	currencyRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Currency')

	#currency
	#----------
	favoriteListRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\FavoriteList')


	#domain
	#----------
	domainRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Domain')


	#phone+email+address+url
	#----------
	contactPhoneRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Contact\Phone')
	contactEmailRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Contact\Email')
	contactUrlRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Contact\Url')
	contactAddressRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Contact\Address')


	#email
	#----------
	emailTemplateRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Email\Template')
	emailLayoutRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Email\Layout')


	#expense
	#----------
	expenseRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Expense\Expense')
	expenseTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Expense\Type')

	#language
	#----------
	languageRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Language')


	#location
	#----------
	locationRepositoryAccessor:
		factory: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Location\Location')
		setup:
			- setParameters(@locationDecoratorFactory)
	locationTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Location\Type')


	#log
	#----------
	logChangeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Log\Change')
	logChangeTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Log\ChangeType')
	logSystemRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Log\System')


	#medium
	#----------
	mediumRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Medium\Medium')
	mediumTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Medium\Type')


	#page
	#----------
	pageRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Page')


	#phrase
	#----------
	phraseRepositoryAccessor:
		factory: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Phrase\Phrase')
		setup:
			- setParameters(%centralLanguage%, @languageRepositoryAccessor)

	phraseTranslationRepositoryAccessor:
		factory: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Phrase\Translation')
		setup:
			- setParameters(%centralLanguage%)

	phraseTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Phrase\Type')


	#rental
	#----------
	rentalRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Rental')
	rentalAmenityRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Amenity')
	rentalAmenityTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\AmenityType')
	rentalInformationRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Information')
	rentalImageRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Image')
	rentalFulltextRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Fulltext')
	rentalTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Type')
	rentalServiceRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Service')
	rentalInterviewQuestionRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\InterviewQuestion')
	rentalInterviewAnswerRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\InterviewAnswer')
	rentalRoomTypeRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\RoomType')
	rentalPricelistRowRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\PricelistRow')
	rentalPricelistRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Pricelist')
	rentalPlacementRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Rental\Placement')

	#FAQ
	#----------
	faqCategoryRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Faq\Category')
	faqQuestionRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Faq\Question')


	#routing
	#----------
	routingPathSegmentRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Routing\PathSegment')
	routingPathSegmentOldRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Routing\PathSegmentOld')


	#seo
	#----------
	seoBackLinkRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Seo\BackLink')
	seoSeoUrlRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Seo\SeoUrl')
	seoTitleSuffixRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Seo\TitleSuffix')

	#ticket
	#----------
	ticketMessageRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Ticket\Message')
	ticketRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\Ticket\Ticket')


	#user
	#----------
	userRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\User')
	userRentalReservationRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\RentalReservation')
	userRentalReviewRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\RentalReview')
	userRentalToFriendRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\RentalToFriend')
	userRoleRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\Role')
	userSiteReviewRepositoryAccessor: Extras\Models\Repository\RepositoryAccessor(@model, 'Entity\User\SiteReview')

factories:

	rentalDecoratorFactory:
		class: Service\Rental\RentalService(..., %entity%)
		implement: Model\Rental\IRentalDecoratorFactory

	rentalImageDecoratorFactory:
		class: Service\Rental\ImageDecorator(..., %entity%)
		setup:
			- setStorage(@rentalImageStorage)
		implement: Model\Rental\IImageDecoratorFactory

#	rentalPricelistDecoratorFactory:
#		class: Service\Rental\PricelistDecorator(..., %entity%)
#		setup:
#			- setStorage(@rentalPricelistStorage)
#		implement: Model\Rental\IPricelistDecoratorFactory

	mediumDecoratorFactory:
		class: Service\Medium\MediumService(..., %entity%)
		implement: Model\Medium\IMediumDecoratorFactory

	phraseDecoratorFactory:
		class: Service\Phrase\PhraseService(..., %entity%)
		implement: Model\Phrase\IPhraseDecoratorFactory

	locationDecoratorFactory:
		class: Service\Location\LocationService(..., %entity%)
		implement: Model\Location\ILocationDecoratorFactory

	attachmentDecoratorFactory:
		class: Service\Ticket\AttachmentDecorator(..., %entity%)
		setup:
			- setStorage(@ticketMessageAttachmentStorage)
		implement: Service\Ticket\IAttachmentDecoratorFactory

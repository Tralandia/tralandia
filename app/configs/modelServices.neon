factories:

	rentalDecoratorFactory:
		class: Service\Rental\RentalService(..., %entity%)
		parameters: [Entity\Rental\Rental entity]
		implement: Model\Rental\IRentalDecoratorFactory

#	rentalImageDecoratorFactory:
#		class: Service\Rental\ImageDecorator(..., %entity%)
#		parameters: [Entity\Rental\Rental entity]
#		setup:
#			- setStorage(@rentalImageStorage)
#		implement: Model\Rental\IImageDecoratorFactory

#	rentalPricelistDecoratorFactory:
#		class: Service\Rental\PricelistDecorator(..., %entity%)
#		setup:
#			- setStorage(@rentalPricelistStorage)
#		implement: Model\Rental\IPricelistDecoratorFactory

#	mediumDecoratorFactory:
#		class: Service\Medium\MediumService(..., %entity%)
#		parameters: [entity]
#		implement: Model\Medium\IMediumDecoratorFactory

	phraseDecoratorFactory:
		class: Service\Phrase\PhraseService(..., %entity%)
		parameters: [Entity\Phrase\Phrase entity]
		implement: Model\Phrase\IPhraseDecoratorFactory

	locationDecoratorFactory:
		class: Service\Location\LocationService(..., %entity%)
		parameters: [Entity\Location\Location entity]
		implement: Model\Location\ILocationDecoratorFactory

#	attachmentDecoratorFactory:
#		class: Service\Ticket\AttachmentDecorator(..., %entity%)
#		parameters: [entity]
#		setup:
#			- setStorage(@ticketMessageAttachmentStorage)
#		implement: Service\Ticket\IAttachmentDecoratorFactory

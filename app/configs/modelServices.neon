services:

	#attraction
	#----------
	attractionEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Attraction\Attraction')

	attractionServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @attractionEntityFactory)

	attractionRepository:
		class: Repository\Attraction\AttractionRepository
		factory: @model::getRepository('Entity\Attraction\Attraction')



	#----------
	attractionTypeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Attraction\Type')

	attractionTypeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @attractionTypeEntityFactory)

	attractionTypeRepository:
		class: Repository\Attraction\TypeRepository
		factory: @model::getRepository('Entity\Attraction\Type')


	#company
	#----------
	companyBankAccountEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Company\BankAccount')

	companyBankAccountServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @companyBankAccountEntityFactory)

	companyBankAccountRepository:
		class: Repository\Company\BankAccountRepository
		factory: @model::getRepository('Entity\Company\BankAccount')


	#----------
	companyEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Company\Company')

	companyServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @companyEntityFactory)

	companyRepository:
		class: Repository\Company\CompanyRepository
		factory: @model::getRepository('Entity\Company\Company')


	#----------
	companyOfficeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Company\Office')

	companyOfficeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @companyOfficeEntityFactory)

	companyOfficeRepository:
		class: Repository\Company\OfficeRepository
		factory: @model::getRepository('Entity\Company\Office')


	#contact
	#----------
	contactCacheEntityFactory: Extras\Models\Entity\EntityFactory('Entity\ContactCache')

	contactCacheServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @contactCacheEntityFactory)

	contactCacheRepository:
		class: Repository\ContactCacheRepository
		factory: @model::getRepository('Entity\ContactCache')


	#----------
	currencyEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Currency')

	currencyServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @currencyEntityFactory)

	currencyRepository:
		class: Repository\CurrencyRepository
		factory: @model::getRepository('Entity\Currency')


	#dictionary
	#----------
	dictionaryLanguageEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Dictionary\Language')

	dictionaryLanguageServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @dictionaryLanguageEntityFactory)

	dictionaryLanguageRepository:
		class: Repository\Dictionary\LanguageRepository
		factory: @model::getRepository('Entity\Dictionary\Language')


	#----------
	dictionaryPhraseEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Dictionary\Phrase')

	dictionaryPhraseServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @dictionaryPhraseEntityFactory)

	dictionaryPhraseRepository:
		class: Repository\Dictionary\PhraseRepository
		factory: @model::getRepository('Entity\Dictionary\Phrase')


	#----------
	dictionaryTranslationEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Dictionary\Translation')

	dictionaryTranslationServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @dictionaryTranslationEntityFactory)

	dictionaryTranslationRepository:
		class: Repository\Dictionary\TranslationRepository
		factory: @model::getRepository('Entity\Dictionary\Translation')


	#----------
	dictionaryTypeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Dictionary\Type')

	dictionaryTypeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @dictionaryTypeEntityFactory)

	dictionaryTypeRepository:
		class: Repository\Dictionary\TypeRepository
		factory: @model::getRepository('Entity\Dictionary\Type')


	#domain
	#----------
	domainEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Domain')

	domainServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @domainEntityFactory)

	domainRepository:
		class: Repository\DomainRepository
		factory: @model::getRepository('Entity\Domain')


	#emailing
	#----------
	emailingBatchEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Emailing\Batch')

	emailingBatchServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @emailingBatchEntityFactory)

	emailingBatchRepository:
		class: Repository\Emailing\BatchRepository
		factory: @model::getRepository('Entity\Emailing\Batch')


	#----------
	emailingTemplateEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Emailing\Template')

	emailingTemplateServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @emailingTemplateEntityFactory)

	emailingTemplateRepository:
		class: Repository\Emailing\TemplateRepository
		factory: @model::getRepository('Entity\Emailing\Template')


	#----------
	emailingTemplateTypeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Emailing\TemplateType')

	emailingTemplateTypeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @emailingTemplateTypeEntityFactory)

	emailingTemplateTypeRepository:
		class: Repository\Emailing\TemplateTypeRepository
		factory: @model::getRepository('Entity\Emailing\TemplateType')


	#expense
	#----------
	expenseEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Expense\Expense')

	expenseServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @expenseEntityFactory)

	expenseRepository:
		class: Repository\Expense\ExpenseRepository
		factory: @model::getRepository('Entity\Expense\Expense')


	#----------
	expenseTypeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Expense\Type')

	expenseTypeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @expenseTypeEntityFactory)

	expenseTypeRepository:
		class: Repository\Expense\TypeRepository
		factory: @model::getRepository('Entity\Expense\Type')


	#invoicing
	#----------
	invoicingCouponEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Invoicing\Coupon')

	invoicingCouponServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @invoicingCouponEntityFactory)

	invoicingCouponRepository:
		class: Repository\Invoicing\CouponRepository
		factory: @model::getRepository('Entity\Invoicing\Coupon')


	#----------
	invoicingInvoiceEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Invoicing\Invoice')

	invoicingInvoiceServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @invoicingInvoiceEntityFactory)

	invoicingInvoiceRepository:
		class: Repository\Invoicing\InvoiceRepository
		factory: @model::getRepository('Entity\Invoicing\Invoice')


	#----------
	invoicingItemEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Invoicing\Item')

	invoicingItemServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @invoicingItemEntityFactory)

	invoicingItemRepository:
		class: Repository\Invoicing\ItemRepository
		factory: @model::getRepository('Entity\Invoicing\Item')


	#----------
	invoicingMarketingEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Invoicing\Marketing')

	invoicingMarketingServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @invoicingMarketingEntityFactory)

	invoicingMarketingRepository:
		class: Repository\Invoicing\MarketingRepository
		factory: @model::getRepository('Entity\Invoicing\Marketing')


	#----------
	invoicingPackageEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Invoicing\Package')

	invoicingPackageServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @invoicingPackageEntityFactory)

	invoicingPackageRepository:
		class: Repository\Invoicing\PackageRepository
		factory: @model::getRepository('Entity\Invoicing\Package')


	#----------
	invoicingServiceEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Invoicing\Service')

	invoicingServiceServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @invoicingServiceEntityFactory)

	invoicingServiceRepository:
		class: Repository\Invoicing\ServiceRepository
		factory: @model::getRepository('Entity\Invoicing\Service')


	#----------
	invoicingServiceDurationEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Invoicing\ServiceDuration')

	invoicingServiceDurationServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @invoicingServiceDurationEntityFactory)

	invoicingServiceDurationRepository:
		class: Repository\Invoicing\ServiceDurationRepository
		factory: @model::getRepository('Entity\Invoicing\ServiceDuration')


	#----------
	invoicingServiceTypeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Invoicing\ServiceType')

	invoicingServiceTypeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @invoicingServiceTypeEntityFactory)

	invoicingServiceTypeRepository:
		class: Repository\Invoicing\ServiceTypeRepository
		factory: @model::getRepository('Entity\Invoicing\ServiceType')


	#----------
	invoicingUseTypeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Invoicing\UseType')

	invoicingUseTypeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @invoicingUseTypeEntityFactory)

	invoicingUseTypeRepository:
		class: Repository\Invoicing\UseTypeRepository
		factory: @model::getRepository('Entity\Invoicing\UseType')


	#locatoin
	#----------
	locationEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Location\Location')

	locationServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @locationEntityFactory)

	locationRepository:
		class: Repository\Location\LocationRepository
		factory: @model::getRepository('Entity\Location\Location')


	#----------
	locationTravelingEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Location\Traveling')

	locationTravelingServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @locationTravelingEntityFactory)

	locationTravelingRepository:
		class: Repository\Location\TravelingRepository
		factory: @model::getRepository('Entity\Location\Traveling')


	#----------
	locationTypeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Location\Type')

	locationTypeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @locationTypeEntityFactory)

	locationTypeRepository:
		class: Repository\Location\TypeRepository
		factory: @model::getRepository('Entity\Location\Type')


	#log
	#----------
	logChangeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Log\Change')

	logChangeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @logChangeEntityFactory)

	logChangeRepository:
		class: Repository\Log\ChangeRepository
		factory: @model::getRepository('Entity\Log\Change')


	#----------
	logChangeTypeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Log\ChangeType')

	logChangeTypeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @logChangeTypeEntityFactory)

	logChangeTypeRepository:
		class: Repository\Log\ChangeTypeRepository
		factory: @model::getRepository('Entity\Log\ChangeType')


	#----------
	logSystemEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Log\System')

	logSystemServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @logSystemEntityFactory)

	logSystemRepository:
		class: Repository\Log\SystemRepository
		factory: @model::getRepository('Entity\Log\System')


	#medium
	#----------
	mediumEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Medium\Medium')

	mediumServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @mediumEntityFactory)

	mediumRepository:
		class: Repository\Medium\MediumRepository
		factory: @model::getRepository('Entity\Medium\Medium')


	#----------
	mediumTypeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Medium\Type')

	mediumTypeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @mediumTypeEntityFactory)

	mediumTypeRepository:
		class: Repository\Medium\TypeRepository
		factory: @model::getRepository('Entity\Medium\Type')


	#page
	#----------
	pageEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Page')

	pageServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @pageEntityFactory)

	pageRepository:
		class: Repository\PageRepository
		factory: @model::getRepository('Entity\Page')


	#rental
	#----------
	rentalAmenityEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Rental\Amenity')

	rentalAmenityServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @rentalAmenityEntityFactory)

	rentalAmenityRepository:
		class: Repository\Rental\AmenityRepository
		factory: @model::getRepository('Entity\Rental\Amenity')


	#----------
	rentalAmenityTypeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Rental\AmenityType')

	rentalAmenityTypeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @rentalAmenityTypeEntityFactory)

	rentalAmenityTypeRepository:
		class: Repository\Rental\AmenityTypeRepository
		factory: @model::getRepository('Entity\Rental\AmenityType')


	#----------
	rentalInformationEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Rental\Information')

	rentalInformationServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @rentalInformationEntityFactory)

	rentalInformationRepository:
		class: Repository\Rental\InformationRepository
		factory: @model::getRepository('Entity\Rental\Information')


	#----------
	rentalFulltextEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Rental\Fulltext')

	rentalFulltextServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @rentalFulltextEntityFactory)

	rentalFulltextRepository:
		class: Repository\Rental\FulltextRepository
		factory: @model::getRepository('Entity\Rental\Fulltext')


	#----------
	rentalEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Rental\Rental')

	rentalServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @rentalEntityFactory)

	rentalRepository:
		class: Repository\Rental\RentalRepository
		factory: @model::getRepository('Entity\Rental\Rental')


	#----------
	rentalTypeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Rental\Type')

	rentalTypeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @rentalTypeEntityFactory)

	rentalTypeRepository:
		class: Repository\Rental\TypeRepository
		factory: @model::getRepository('Entity\Rental\Type')


	#routing
	#----------
	routingPathSegmentEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Routing\PathSegment')

	routingPathSegmentServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @routingPathSegmentEntityFactory)

	routingPathSegmentRepository:
		class: Repository\Routing\PathSegmentRepository
		factory: @model::getRepository('Entity\Routing\PathSegment')


	#----------
	routingPathSegmentOldEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Routing\PathSegmentOld')

	routingPathSegmentOldServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @routingPathSegmentOldEntityFactory)

	routingPathSegmentOldRepository:
		class: Repository\Routing\PathSegmentOldRepository
		factory: @model::getRepository('Entity\Routing\PathSegmentOld')


	#seo
	#----------
	seoBackLinkEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Seo\BackLink')

	seoBackLinkServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @seoBackLinkEntityFactory)

	seoBackLinkRepository:
		class: Repository\Seo\BackLinkRepository
		factory: @model::getRepository('Entity\Seo\BackLink')


	#----------
	seoSeoUrlEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Seo\SeoUrl')

	seoSeoUrlServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @seoSeoUrlEntityFactory)

	seoSeoUrlRepository:
		class: Repository\Seo\SeoUrlRepository
		factory: @model::getRepository('Entity\Seo\SeoUrl')


	#----------
	seoTitleSuffixEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Seo\TitleSuffix')

	seoTitleSuffixServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @seoTitleSuffixEntityFactory)

	seoTitleSuffixRepository:
		class: Repository\Seo\TitleSuffixRepository
		factory: @model::getRepository('Entity\Seo\TitleSuffix')


	#task
	#----------
	taskEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Task\Task')

	taskServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\Task\TaskService', @taskEntityFactory)

	taskRepository:
		class: Repository\Task\TaskRepository
		factory: @model::getRepository('Entity\Task\Task')


	#----------
	taskTypeEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Task\Type')

	taskTypeServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @taskTypeEntityFactory)

	taskTypeRepository:
		class: Repository\Task\TypeRepository
		factory: @model::getRepository('Entity\Task\Type')


	#ticket
	#----------
	ticketMessageEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Ticket\Message')

	ticketMessageServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @ticketMessageEntityFactory)

	ticketMessageRepository:
		class: Repository\Ticket\MessageRepository
		factory: @model::getRepository('Entity\Ticket\Message')


	#----------
	ticketEntityFactory: Extras\Models\Entity\EntityFactory('Entity\Ticket\Ticket')

	ticketServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @ticketEntityFactory)

	ticketRepository:
		class: Repository\Ticket\TicketRepository
		factory: @model::getRepository('Entity\Ticket\Ticket')


	#user
	#----------
	userCombinationEntityFactory: Extras\Models\Entity\EntityFactory('Entity\User\Combination')

	userCombinationServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @userCombinationEntityFactory)

	userCombinationRepository:
		class: Repository\User\CombinationRepository
		factory: @model::getRepository('Entity\User\Combination')


	#----------
	userRentalQuestionEntityFactory: Extras\Models\Entity\EntityFactory('Entity\User\RentalQuestion')

	userRentalQuestionServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @userRentalQuestionEntityFactory)

	userRentalQuestionRepository:
		class: Repository\User\RentalQuestionRepository
		factory: @model::getRepository('Entity\User\RentalQuestion')


	#----------
	userRentalReservationEntityFactory: Extras\Models\Entity\EntityFactory('Entity\User\RentalReservation')

	userRentalReservationServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @userRentalReservationEntityFactory)

	userRentalReservationRepository:
		class: Repository\User\RentalReservationRepository
		factory: @model::getRepository('Entity\User\RentalReservation')


	#----------
	userRentalReviewEntityFactory: Extras\Models\Entity\EntityFactory('Entity\User\RentalReview')

	userRentalReviewServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @userRentalReviewEntityFactory)

	userRentalReviewRepository:
		class: Repository\User\RentalReviewRepository
		factory: @model::getRepository('Entity\User\RentalReview')


	#----------
	userRentalToFriendEntityFactory: Extras\Models\Entity\EntityFactory('Entity\User\RentalToFriend')

	userRentalToFriendServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @userRentalToFriendEntityFactory)

	userRentalToFriendRepository:
		class: Repository\User\RentalToFriendRepository
		factory: @model::getRepository('Entity\User\RentalToFriend')


	#----------
	userRoleEntityFactory: Extras\Models\Entity\EntityFactory('Entity\User\Role')

	userRoleServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @userRoleEntityFactory)

	userRoleRepository:
		class: Repository\User\RoleRepository
		factory: @model::getRepository('Entity\User\Role')


	#----------
	userSiteOwnerReviewEntityFactory: Extras\Models\Entity\EntityFactory('Entity\User\SiteOwnerReview')

	userSiteOwnerReviewServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @userSiteOwnerReviewEntityFactory)

	userSiteOwnerReviewRepository:
		class: Repository\User\SiteOwnerReviewRepository
		factory: @model::getRepository('Entity\User\SiteOwnerReview')


	#----------
	userSiteVisitorReviewEntityFactory: Extras\Models\Entity\EntityFactory('Entity\User\SiteVisitorReview')

	userSiteVisitorReviewServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @userSiteVisitorReviewEntityFactory)

	userSiteVisitorReviewRepository:
		class: Repository\User\SiteVisitorReviewRepository
		factory: @model::getRepository('Entity\User\SiteVisitorReview')


	#----------
	userEntityFactory: Extras\Models\Entity\EntityFactory('Entity\User\User')

	userServiceFactory: Extras\Models\Service\ServiceFactory(@model, 'Service\BaseService', @userEntityFactory)

	userRepository:
		class: Repository\User\UserRepository
		factory: @model::getRepository('Entity\User\User')


